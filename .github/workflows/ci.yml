# .github/workflows/ci.yml

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ] # 실제 사용하는 주 브랜치명으로 확인
  pull_request:
    branches: [ "master" ] # 실제 사용하는 주 브랜치명으로 확인

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          MYSQL_DATABASE: SE
          MYSQL_USER: ${{ secrets.TEST_DB_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -p${{ secrets.TEST_DB_PASSWORD }} --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Install MySQL client and Wait for MySQL # MySQL 클라이언트 설치 및 준비 대기
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client # mysql-client 설치
          echo "Waiting for MySQL service to be ready..."
          timeout 60 bash -c 'until mysqladmin ping -h 127.0.0.1 -u root -p"$DB_ROOT_PASSWORD" --silent; do sleep 1; done'
        env:
          DB_ROOT_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }} # env 변수명 통일

      - name: Apply database schema
        run: |
          echo "Applying database schema..."
          # 아래 YOUR_SCHEMA_FILE_PATH를 실제 스키마 파일 경로로 수정하세요.
          # 예: ./schema.sql 또는 ./db/schema.sql 등
          # 스키마 파일에는 CREATE TABLE 문들만 있어야 합니다.
          mysql -h 127.0.0.1 -u root -p"$DB_ROOT_PASSWORD" SE < ./YOUR_SCHEMA_FILE_PATH
        env:
          DB_ROOT_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}

      - name: Build with Gradle
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/SE?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
          SPRING_DATASOURCE_USERNAME: ${{ secrets.TEST_DB_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          SPRING_JPA_HIBERNATE_DDL_AUTO: validate # 스키마를 직접 생성했으므로 validate 또는 none
        run: |
          echo "DB URL: $SPRING_DATASOURCE_URL"
          echo "DB User: $SPRING_DATASOURCE_USERNAME"
          ./gradlew build