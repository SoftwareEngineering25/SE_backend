spring:
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID:dummy_kakao_client_id} # SecurityConfig에 하드코딩된 클라이언트 ID와 일치해야 함
            client-secret: ${KAKAO_CLIENT_SECRET:dummy_kakao_client_secret} # 카카오 개발자 사이트에서 발급받은 Secret
            client-authentication-method: client_secret_post # 카카오에서 권장하는 방식 중 하나
            authorization-grant-type: authorization_code # 웹 애플리케이션 표준 방식
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}" # Spring Security 기본 리다이렉트 URI 패턴
            scope: profile_nickname, profile_image, account_email # 카카오에서 받아올 사용자 정보 범위 (필요에 따라 조정)

        provider:
          # 카카오 공급자 정보 (registrationId와 이름 일치: kakao)
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize # 카카오 인증 서버 URL
            token-uri: https://kauth.kakao.com/oauth/token # 카카오 토큰 발급 URL
            user-info-uri: https://kapi.kakao.com/v2/user/me # 카카오 사용자 정보 조회 URL
            user-name-attribute: id # 사용자 정보 응답에서 고유 식별자로 사용할 속성 이름 (카카오는 보통 'id')

  datasource:
    hikari:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:your_database}?serverTimezone=UTC&characterEncoding=UTF-8
      username: ${DB_USERNAME:root}
      password: ${DB_PASSWORD:password} # 실제 비밀번호 대신 플레이스홀더 또는 더미 값


mybatis:
  mapper-locations: classpath:mapper/**/*.xml
  type-aliases-package: com.dr.domain
openai:
  api:
    key: ${OPENAI_API_KEY:dummy_openai_key}
    url: ${OPENAI_API_URL:https://api.openai.com/v1/chat/completions} # 새로 추가
coolsms:
  api:
    key: ${COOLSMS_API_KEY:dummy_coolsms_key} # 실제 키 대신 플레이스홀더 또는 더미 값
    secret: ${COOLSMS_API_SECRET:dummy_coolsms_secret} # 실제 시크릿 대신 플레이스홀더 또는 더미 값
    number: ${COOLSMS_API_NUMBER:01012345678} # 실제 번호 대신 플레이스홀더 또는 더미 값