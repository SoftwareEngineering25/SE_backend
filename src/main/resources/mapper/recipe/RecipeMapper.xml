<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dr.mapper.recipe.RecipeMapper">

    <select id="selectAllPages" resultType="MyRecipeListDTO">
        SELECT
            R.RECIPE_NUMBER AS recipeNumber,
            R.RECIPE_TITLE AS recipeTitle,
            U.USER_NICKNAME AS userNickName,
            DATE_FORMAT(R.RECIPE_WRITE_DATE, '%Y-%m-%d') AS recipeWriteDate,
            P.PHOTO_LOCAL AS photoLocal,
            P.PHOTO_ORIGINAL AS photoOriginal,
            COUNT(DISTINCT G.GOOD_NUMBER) AS goodCount
        FROM DR_RECIPE R
                 JOIN DR_USER U ON R.USER_NUMBER = U.USER_NUMBER
                 LEFT JOIN (
            SELECT
                PHOTO_LOCAL,
                PHOTO_ORIGINAL,
                RECIPE_NUMBER,
                ROW_NUMBER() OVER (PARTITION BY RECIPE_NUMBER ORDER BY PHOTO_NUMBER ASC) AS RN
            FROM DR_PHOTO
            WHERE RECIPE_NUMBER IS NOT NULL
        ) P ON R.RECIPE_NUMBER = P.RECIPE_NUMBER AND P.RN = 1
                 LEFT JOIN DR_GOOD G ON R.RECIPE_NUMBER = G.RECIPE_NUMBER
        WHERE R.RECIPE_TYPE = '나만의레시피'
        GROUP BY R.RECIPE_NUMBER, R.RECIPE_TITLE, U.USER_NICKNAME, R.RECIPE_WRITE_DATE, P.PHOTO_LOCAL, P.PHOTO_ORIGINAL
        ORDER BY R.RECIPE_WRITE_DATE DESC
    </select>

    <select id="selectRecipesGood" resultType="MyRecipeListDTO">
        SELECT
            R.RECIPE_NUMBER AS recipeNumber,
            R.RECIPE_TITLE AS recipeTitle,
            U.USER_NICKNAME AS userNickName,
            DATE_FORMAT(R.RECIPE_WRITE_DATE, '%Y-%m-%d') AS recipeWriteDate,
            P.PHOTO_LOCAL AS photoLocal,
            P.PHOTO_ORIGINAL AS photoOriginal,
            COUNT(DISTINCT G.GOOD_NUMBER) AS goodCount
        FROM DR_RECIPE R
                 JOIN DR_USER U ON R.USER_NUMBER = U.USER_NUMBER
                 LEFT JOIN (
            SELECT
                PHOTO_LOCAL,
                PHOTO_ORIGINAL,
                RECIPE_NUMBER,
                ROW_NUMBER() OVER (PARTITION BY RECIPE_NUMBER ORDER BY PHOTO_NUMBER ASC) AS RN
            FROM DR_PHOTO
            WHERE RECIPE_NUMBER IS NOT NULL
        ) P ON R.RECIPE_NUMBER = P.RECIPE_NUMBER AND P.RN = 1
                 LEFT JOIN DR_GOOD G ON R.RECIPE_NUMBER = G.RECIPE_NUMBER
        WHERE R.RECIPE_TYPE = '나만의레시피'
        GROUP BY R.RECIPE_NUMBER, R.RECIPE_TITLE, U.USER_NICKNAME, R.RECIPE_WRITE_DATE, P.PHOTO_LOCAL, P.PHOTO_ORIGINAL
        ORDER BY goodCount DESC, R.RECIPE_WRITE_DATE DESC
    </select>

    <select id="selectMyRecipeDetail" resultType="MyRecipeDetailDTO">
        SELECT
            R.RECIPE_NUMBER,
            R.RECIPE_TITLE,
            R.RECIPE_TYPE,
            R.RECIPE_TEXT,
            DATE_FORMAT(R.RECIPE_WRITE_DATE, '%Y-%m-%d') AS recipeWriteDate,
            U.USER_NICKNAME,
            COALESCE(P.PHOTO_LOCAL, U.PROFILE_PIC) AS PHOTO_LOCAL,
            COUNT(DISTINCT G.GOOD_NUMBER) AS goodCount,
            R.USER_NUMBER,
            U.PROFILE_PIC
        FROM
            DR_RECIPE R
                JOIN
            DR_USER U ON R.USER_NUMBER = U.USER_NUMBER
                LEFT JOIN
            DR_GOOD G ON R.RECIPE_NUMBER = G.RECIPE_NUMBER
                LEFT JOIN (
                SELECT
                    USER_NUMBER,
                    PHOTO_LOCAL,
                    ROW_NUMBER() OVER (PARTITION BY USER_NUMBER ORDER BY PHOTO_UPLOAD_DATE DESC) AS RN
                FROM
                    DR_PHOTO
                WHERE USER_NUMBER IS NOT NULL
            ) P ON U.USER_NUMBER = P.USER_NUMBER AND P.RN = 1
        WHERE
            R.RECIPE_NUMBER = #{recipeNumber}
          AND R.RECIPE_TYPE = '나만의레시피'
        GROUP BY
            R.RECIPE_NUMBER, R.RECIPE_TITLE, R.RECIPE_TYPE, R.RECIPE_TEXT, R.RECIPE_WRITE_DATE,
            U.USER_NICKNAME, P.PHOTO_LOCAL, R.USER_NUMBER, U.PROFILE_PIC
    </select>

    <insert id="increaseGoodCount" parameterType="MyRecipeGoodDTO" useGeneratedKeys="true" keyProperty="goodNumber">
        INSERT INTO DR_GOOD(RECIPE_NUMBER, USER_NUMBER, GOOD_DATE)
        VALUES (#{recipeNumber}, #{userNumber}, NOW())
    </insert>

    <delete id="decreaseGoodCount" parameterType="MyRecipeGoodDTO">
        DELETE
        FROM DR_GOOD
        WHERE RECIPE_NUMBER = #{recipeNumber}
          AND USER_NUMBER = #{userNumber}
    </delete>

    <select id="selectMyRecipeComment" parameterType="Long" resultType="MyRecipeCommentDTO">
        SELECT RP.REPLY_NUMBER      AS replyNumber,
               U.USER_NICKNAME      AS userNickName,
               RP.REPLY_WRITE_DATE  AS replyWriteDate,
               RP.REPLY_MODIFY_DATE AS replyModifyDate,
               RP.REPLY_TEXT        AS replyText,
               U.PROFILE_PIC        AS photoLocal
        FROM DR_REPLY RP
                 JOIN
             DR_USER U ON RP.USER_NUMBER = U.USER_NUMBER
                 JOIN
             DR_RECIPE R ON RP.RECIPE_NUMBER = R.RECIPE_NUMBER
        WHERE RP.RECIPE_NUMBER = #{recipeNumber}
        ORDER BY RP.REPLY_WRITE_DATE DESC
    </select>

    <insert id="insertReply" parameterType="MyRecipeCommentDTO" useGeneratedKeys="true" keyProperty="replyNumber">
        INSERT INTO DR_REPLY(REPLY_TEXT, RECIPE_NUMBER, USER_NUMBER, REPLY_WRITE_DATE)
        VALUES (#{replyText}, #{recipeNumber}, #{userNumber}, NOW())
    </insert>

    <update id="updateMyReply" parameterType="MyRecipeCommentDTO">
        UPDATE DR_REPLY
        SET REPLY_TEXT        = #{replyText},
            REPLY_MODIFY_DATE = NOW()
        WHERE REPLY_NUMBER = #{replyNumber}
    </update>

    <delete id="deleteMyReply" parameterType="Long">
        DELETE
        FROM DR_REPLY
        WHERE REPLY_NUMBER = #{replyNumber}
    </delete>

    <select id="selectAllPages1" resultType="ChatBotRecipeListDTO">
        SELECT
            R.RECIPE_NUMBER AS recipeNumber,
            R.RECIPE_TITLE AS recipeTitle,
            U.USER_NICKNAME AS userNickName,
            DATE_FORMAT(R.RECIPE_WRITE_DATE, '%Y-%m-%d') AS recipeWriteDate,
            P.PHOTO_LOCAL AS photoLocal,
            P.PHOTO_ORIGINAL AS photoOriginal,
            COUNT(DISTINCT G.GOOD_NUMBER) AS goodCount
        FROM DR_RECIPE R
                 JOIN DR_USER U ON R.USER_NUMBER = U.USER_NUMBER
                 LEFT JOIN (
            SELECT
                PHOTO_LOCAL,
                PHOTO_ORIGINAL,
                RECIPE_NUMBER,
                ROW_NUMBER() OVER (PARTITION BY RECIPE_NUMBER ORDER BY PHOTO_NUMBER ASC) AS RN
            FROM DR_PHOTO
            WHERE RECIPE_NUMBER IS NOT NULL
        ) P ON R.RECIPE_NUMBER = P.RECIPE_NUMBER AND P.RN = 1
                 LEFT JOIN DR_GOOD G ON R.RECIPE_NUMBER = G.RECIPE_NUMBER
        WHERE R.RECIPE_TYPE = '챗봇레시피'
        GROUP BY R.RECIPE_NUMBER, R.RECIPE_TITLE, U.USER_NICKNAME, R.RECIPE_WRITE_DATE, P.PHOTO_LOCAL, P.PHOTO_ORIGINAL
        ORDER BY R.RECIPE_WRITE_DATE DESC
    </select>

    <select id="selectAllPagesGood1" resultType="ChatBotRecipeListDTO">
        SELECT
            R.RECIPE_NUMBER AS recipeNumber,
            R.RECIPE_TITLE AS recipeTitle,
            U.USER_NICKNAME AS userNickName,
            DATE_FORMAT(R.RECIPE_WRITE_DATE, '%Y-%m-%d') AS recipeWriteDate,
            P.PHOTO_LOCAL AS photoLocal,
            P.PHOTO_ORIGINAL AS photoOriginal,
            COUNT(DISTINCT G.GOOD_NUMBER) AS goodCount
        FROM DR_RECIPE R
                 JOIN DR_USER U ON R.USER_NUMBER = U.USER_NUMBER
                 LEFT JOIN (
            SELECT
                PHOTO_LOCAL,
                PHOTO_ORIGINAL,
                RECIPE_NUMBER,
                ROW_NUMBER() OVER (PARTITION BY RECIPE_NUMBER ORDER BY PHOTO_NUMBER ASC) AS RN
            FROM DR_PHOTO
            WHERE RECIPE_NUMBER IS NOT NULL
        ) P ON R.RECIPE_NUMBER = P.RECIPE_NUMBER AND P.RN = 1
                 LEFT JOIN DR_GOOD G ON R.RECIPE_NUMBER = G.RECIPE_NUMBER
        WHERE R.RECIPE_TYPE = '챗봇레시피'
        GROUP BY R.RECIPE_NUMBER, R.RECIPE_TITLE, U.USER_NICKNAME, R.RECIPE_WRITE_DATE, P.PHOTO_LOCAL, P.PHOTO_ORIGINAL
        ORDER BY goodCount DESC, R.RECIPE_WRITE_DATE DESC
    </select>

    <select id="selectChatBotRecipeDetail" resultType="ChatBotRecipeDetailDTO">
        SELECT R.RECIPE_NUMBER,
               R.RECIPE_TITLE,
               R.RECIPE_TYPE,
               R.RECIPE_TEXT,
               DATE_FORMAT(R.RECIPE_WRITE_DATE, '%Y-%m-%d') AS recipeWriteDate,
               U.USER_NICKNAME,
               P.PHOTO_LOCAL,
               COUNT(DISTINCT G.GOOD_NUMBER) AS goodCount,
               R.USER_NUMBER,
               U.PROFILE_PIC
        FROM DR_RECIPE R
                 JOIN DR_USER U ON R.USER_NUMBER = U.USER_NUMBER
                 LEFT JOIN DR_GOOD G ON R.RECIPE_NUMBER = G.RECIPE_NUMBER
                 LEFT JOIN (
            SELECT PHOTO_LOCAL, RECIPE_NUMBER,
                   ROW_NUMBER() OVER (PARTITION BY RECIPE_NUMBER ORDER BY PHOTO_NUMBER ASC) as RN
            FROM DR_PHOTO
            WHERE RECIPE_NUMBER IS NOT NULL
        ) P ON R.RECIPE_NUMBER = P.RECIPE_NUMBER AND P.RN = 1
        WHERE R.RECIPE_NUMBER = #{recipeNumber}
          AND R.RECIPE_TYPE = '챗봇레시피'
        GROUP BY R.RECIPE_NUMBER, R.RECIPE_TITLE, R.RECIPE_TYPE, R.RECIPE_TEXT, R.RECIPE_WRITE_DATE,
                 U.USER_NICKNAME, P.PHOTO_LOCAL, R.USER_NUMBER, U.PROFILE_PIC
    </select>

    <insert id="ChatBotincreaseGoodCount" parameterType="ChatBotRecipeCommentDTO" useGeneratedKeys="true" keyProperty="goodNumber">
        INSERT INTO DR_GOOD(RECIPE_NUMBER, USER_NUMBER, GOOD_DATE)
        VALUES (#{recipeNumber}, #{userNumber}, NOW())
    </insert>

    <delete id="ChatBotdecreaseGoodCount" parameterType="ChatBotRecipeCommentDTO">
        DELETE
        FROM DR_GOOD
        WHERE RECIPE_NUMBER = #{recipeNumber}
          AND USER_NUMBER = #{userNumber}
    </delete>

    <select id="selectChatBotRecipeComment" parameterType="Long" resultType="ChatBotRecipeCommentDTO">
        SELECT RP.REPLY_NUMBER      AS replyNumber,
               U.USER_NICKNAME      AS userNickName,
               RP.REPLY_WRITE_DATE  AS replyWriteDate,
               RP.REPLY_MODIFY_DATE AS replyModifyDate,
               RP.REPLY_TEXT        AS replyText,
               U.PROFILE_PIC        AS photoLocal
        FROM DR_REPLY RP
                 JOIN
             DR_USER U ON RP.USER_NUMBER = U.USER_NUMBER
                 JOIN
             DR_RECIPE R ON RP.RECIPE_NUMBER = R.RECIPE_NUMBER
        WHERE RP.RECIPE_NUMBER = #{recipeNumber}
        ORDER BY RP.REPLY_WRITE_DATE DESC
    </select>

    <insert id="insertChatBotReply" parameterType="ChatBotRecipeCommentDTO" useGeneratedKeys="true" keyProperty="replyNumber">
        INSERT INTO DR_REPLY(REPLY_TEXT, RECIPE_NUMBER, USER_NUMBER, REPLY_WRITE_DATE)
        VALUES (#{replyText}, #{recipeNumber}, #{userNumber}, NOW())
    </insert>

    <update id="updateChatBotReply" parameterType="ChatBotRecipeCommentDTO">
        UPDATE DR_REPLY
        SET REPLY_TEXT        = #{replyText},
            REPLY_MODIFY_DATE = NOW()
        WHERE REPLY_NUMBER = #{replyNumber}
    </update>
    <delete id="deleteChatBotReply" parameterType="Long">
        DELETE
        FROM DR_REPLY
        WHERE REPLY_NUMBER = #{replyNumber}
    </delete>

    <insert id="insertMyRecipe" parameterType="MyRecipeWriteDTO" useGeneratedKeys="true" keyProperty="recipeNumber">
        INSERT INTO DR_RECIPE (
        USER_NUMBER, RECIPE_TITLE, RECIPE_TEXT, RECIPE_TYPE, RECIPE_WRITE_DATE
        ) VALUES (
        #{userNumber}, #{recipeTitle}, #{recipeText}, '나만의레시피', NOW()
        )
    </insert>

    <insert id="insertMyPhoto" parameterType="RecipePhotoDTO" useGeneratedKeys="true" keyProperty="photoNumber">
        INSERT INTO DR_PHOTO (
        PHOTO_ORIGINAL, PHOTO_LOCAL, PHOTO_SIZE , RECIPE_NUMBER, PHOTO_UPLOAD_DATE
        ) VALUES (
        #{photoOriginal}, #{photoLocal}, #{photoSize} ,  #{recipeNumber}, NOW()
        )
    </insert>

    <insert id="insertChatBotRecipe" parameterType="ChatBotRecipeWriteDTO" useGeneratedKeys="true" keyProperty="recipeNumber">
        INSERT INTO DR_RECIPE (
        USER_NUMBER, RECIPE_TITLE, RECIPE_TEXT, RECIPE_TYPE, RECIPE_WRITE_DATE
        ) VALUES (
        #{userNumber}, #{recipeTitle}, #{recipeText}, '챗봇레시피', NOW()
        )
    </insert>

    <insert id="insertChatBotPhoto" parameterType="RecipePhotoDTO" useGeneratedKeys="true" keyProperty="photoNumber">
        INSERT INTO DR_PHOTO (
        PHOTO_ORIGINAL, PHOTO_LOCAL, PHOTO_SIZE , RECIPE_NUMBER, PHOTO_UPLOAD_DATE
        ) VALUES (
        #{photoOriginal}, #{photoLocal}, #{photoSize} ,  #{recipeNumber}, NOW()
        )
    </insert>

    <insert id="insertScoreByRecipe" parameterType="ScoreCheckDTO" useGeneratedKeys="true" keyProperty="scoreNumber">
        INSERT INTO DR_SCORE (USER_NUMBER, SCORE_GET, SCORE_DATE, SCORE_REASON)
        VALUES (#{userNumber}, #{scoreGet}, NOW(), '레시피 작성')
    </insert>

    <insert id="insertScorerecommand" parameterType="ScoreCheckDTO" useGeneratedKeys="true" keyProperty="scoreNumber">
        INSERT INTO DR_SCORE (USER_NUMBER, SCORE_GET, SCORE_DATE, SCORE_REASON)
        VALUES (#{userNumber}, #{scoreGet}, NOW(), '레시피 추천 받음')
    </insert>

    <delete id="deleteScorerecommand" parameterType="ScoreCheckDTO">
        DELETE FROM DR_SCORE
        WHERE SCORE_NUMBER = (
            SELECT SCORE_NUMBER
            FROM DR_SCORE
            WHERE USER_NUMBER = #{userNumber} AND SCORE_GET = 5 AND SCORE_REASON = '레시피 추천 받음'
            ORDER BY SCORE_DATE DESC, SCORE_NUMBER DESC
            LIMIT 1
            )
    </delete>
    <insert id="addSteam" parameterType="RecipeSteamDTO" useGeneratedKeys="true" keyProperty="steamNumber">
        INSERT INTO DR_STEAM (RECIPE_NUMBER, USER_NUMBER, STEAM_DATE)
        VALUES (#{recipeNumber}, #{userNumber}, NOW())
    </insert>

    <delete id="removeSteam" parameterType="RecipeSteamDTO">
        DELETE
        FROM DR_STEAM
        WHERE RECIPE_NUMBER = #{recipeNumber}
          AND USER_NUMBER = #{userNumber}
    </delete>

    <insert id="report" parameterType="RecipeReportDTO" useGeneratedKeys="true" keyProperty="sirenNumber">
        INSERT INTO DR_SIREN(SIREN_REASON, SIREN_TYPE , RECIPE_NUMBER , REPLY_NUMBER , USER_NUMBER, SIREN_DATE)
        VALUES (#{sirenReason}, #{sirenType} , #{recipeNumber} , #{replyNumber} , #{userNumber}, NOW())
    </insert>

    <delete id="deleteRecipe" parameterType="Long">
        DELETE FROM DR_RECIPE WHERE RECIPE_NUMBER = #{recipeNumber}
    </delete>

    <delete id="deletePhoto" parameterType="Long">
        DELETE FROM DR_PHOTO WHERE RECIPE_NUMBER = #{recipeNumber}
    </delete>

    <delete id="deleteChatBotRecipe" parameterType="Long">
        DELETE FROM DR_RECIPE WHERE RECIPE_NUMBER = #{recipeNumber}
    </delete>

    <delete id="deleteChatBotPhoto" parameterType="Long">
        DELETE FROM DR_PHOTO WHERE RECIPE_NUMBER = #{recipeNumber}
    </delete>

    <update id="updateRecipe" parameterType="MyRecipeUpdateDTO">
        UPDATE DR_RECIPE
        SET RECIPE_TITLE = #{recipeTitle},
            RECIPE_TEXT = #{recipeText},
            RECIPE_MODIFY_DATE = NOW()
        WHERE RECIPE_NUMBER = #{recipeNumber}
    </update>

    <update id="updatePhoto" parameterType="MyRecipeUpdateDTO">
        UPDATE DR_PHOTO
        SET PHOTO_ORIGINAL = #{photoOriginal},
        PHOTO_LOCAL = #{photoLocal},
        PHOTO_SIZE = #{photoSize}
        WHERE RECIPE_NUMBER = #{recipeNumber}
    </update>

    <update id="updateChatBotRecipe" parameterType="ChatBotRecipeUpdateDTO">
        UPDATE DR_RECIPE
        SET RECIPE_TITLE = #{recipeTitle},
            RECIPE_TEXT = #{recipeText},
            RECIPE_MODIFY_DATE = NOW()
        WHERE RECIPE_NUMBER = #{recipeNumber}
    </update>

    <update id="updateChatBotPhoto" parameterType="ChatBotRecipeUpdateDTO">
        UPDATE DR_PHOTO
        SET PHOTO_ORIGINAL = #{photoOriginal},
        PHOTO_LOCAL = #{photoLocal},
        PHOTO_SIZE = #{photoSize}
        WHERE RECIPE_NUMBER = #{recipeNumber}
    </update>

</mapper>